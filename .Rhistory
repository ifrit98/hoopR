from urllib import urlopen
import urllib
urllib
import sys
sys.executable
sys.version
sys.version_info
sys.version_info > 3
sys.version_info[1]
sys.version_info[0]
sys.version_info[0] >= 3
import sys
if sys.version_info[0] >= 3:
from urllib import parse as openurl
else:
from urllib import urlopen as openurl
openurl
year = 2019 # raw_input("Enter desired year to scrape data:\n ")
try:
year = int(year)
except ValueError:
year = 2019
print("Input error: Defaulting to 2019...")
year
urls = {
'pergame': "https://www.basketball-reference.com/leagues/NBA_{}_per_game.html",
'per36': "https://www.basketball-reference.com/leagues/NBA_{}_per_minute.html",
'per100': "https://www.basketball-reference.com/leagues/NBA_{}_per_poss.html",
'totals' : "https://www.basketball-reference.com/leagues/NBA_{}_totals.html",
'advanced': "https://www.basketball-reference.com/leagues/NBA_{}_advanced.html"
}
url = urls['advanced'].format(year)
html = openurl(url)
soup = BeautifulSoup(html, features='lxml')
from bs4 import BeautifulSoup
import pandas as pd
import sys
url = urls['advanced'].format(year)
html = openurl(url)
openurl
openurl.urlparse(url)
if sys.version_info[0] >= 3:
from urllib import parse
urlopen = parse.urlparse
else:
from urllib import urlopen as openurl
url = urls['advanced'].format(year)
html = openurl(url)
openurl
openurl = parse.urlparse
url = urls['advanced'].format(year)
html = openurl(url)
soup = BeautifulSoup(html, features='lxml')
py_config()
reticulate::repl_python()
reticulate::repl_python()
any(is.na(df))
df
load_data)
load_data()
source('~/git/hoopR/R/scrape.R')
df <- load_data()
any(is.na(df))
df
